// Used for fast retrieval on id and to enforce uniqueness
db.tracker.createIndex({"id":1}, {unique:true})
// Used for fast retrieval of tag values - in particular to get distinct tag values: db.tracker.distinct("tags.tag")
db.tracker.createIndex({"tags.tag":1}, {sparse:1})
// Used primarily to enforce uniqueness
db.transfer.createIndex({"from":1, "to":1, "fromQuad":1, "toQuad":1, "slice":1}, {unique:true, dropDups:true})
//TODO: Need to run this on production and test tracker DB before code goes to those systems.
db.barcodes.createIndex({"seq":1}, {unique:true, dropDups:true})
db.barcodes.createIndex({"name":1}, {unique:true, dropDups:true, sparse:true})
db.sets.createIndex({"name":1}, {unique:true, dropDups:true})

// Update to include isTubeToMany:
// db.getCollection('transfer').update({}, {"$set": {"isTubeToMany" : false}}, {"multi": true})
// Update to include rack tube type:
// db.getCollection('tracker').update({"component":"Rack"}, {"$set": {"initialContent" : "BSP samples"}}, {"multi": true})
// Need to move rack scans out of Jira DB into Tracker DB
// Need to update to mongo 2.6 to allow bulk operations that are done for tube positions in btllims
// Switching from barcode to bc in rack entries...
// db.rack.find({ 'contents.0.barcode': { $exists: 1 } }).snapshot().forEach(function(item)
// {
//    for(i = 0; i != item.contents.length; ++i)
//    {
//        item.contents[i].bc = item.contents[i].barcode;
//        delete item.contents[i].barcode;
//    }

//    db.rack.update({_id: item._id}, item);
// });
